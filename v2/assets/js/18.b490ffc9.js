(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{373:function(e,t,r){"use strict";r.r(t);var s=r(42),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"event-bus"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#event-bus"}},[e._v("#")]),e._v(" Event Bus")]),e._v(" "),r("p",[e._v("The "),r("strong",[e._v("Event Bus")]),e._v(" has been fully re-implemented in OSH v2 to make use of "),r("a",{attrs:{href:"https://www.reactive-streams.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reactive Streams"),r("OutboundLink")],1),e._v(" patterns. Reactive streams are now part of the JDK since the Flow API was introduced in Java 9.")]),e._v(" "),r("p",[e._v("This new default implementation allows for highly concurrent event deliveries with less OSH specific code. Indeed, OSH builds on Java 9 "),r("a",{attrs:{href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/SubmissionPublisher.html",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[e._v("SubmissionPublisher")]),r("OutboundLink")],1),e._v(", and adds a mechanism for components to retrieve a publisher instance and to subscribe to one or more publishers with or without a filter.")]),e._v(" "),r("h2",{attrs:{id:"event-publishers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#event-publishers"}},[e._v("#")]),e._v(" Event Publishers")]),e._v(" "),r("p",[e._v("Any OSH component can retrieve a publisher instance using a unique 'event source ID'. The publisher provides a channel for the component to publish events into, and deliver them to other components that have subscribed to it.")]),e._v(" "),r("p",[e._v("== Event Queues Diagram ==")]),e._v(" "),r("h3",{attrs:{id:"publisher-groups"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#publisher-groups"}},[e._v("#")]),e._v(" Publisher Groups")]),e._v(" "),r("p",[e._v("Event producer groups allow multiple event producers to publish their events under a common group, meaning that all events will be made available to a single publisher instance, with the intent of saving memory.")]),e._v(" "),r("p",[e._v("This is useful for example for large sensor networks where it would be inneficient to treat each sensor as a separate publisher. Rather, p")]),e._v(" "),r("h2",{attrs:{id:"event-subscribers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#event-subscribers"}},[e._v("#")]),e._v(" Event Subscribers")]),e._v(" "),r("p",[e._v("OSH components can subscribe to events by calling the event-bus interface using a powerful filtering language.")]),e._v(" "),r("p",[e._v("Event filters allow one to select:")]),e._v(" "),r("ul",[r("li",[e._v("One or more datasources (procedure, datastream, etc.)")]),e._v(" "),r("li",[e._v("Filter on content using a predicate")])]),e._v(" "),r("p",[e._v("== Event Filtering Diagram ==")])])}),[],!1,null,null,null);t.default=a.exports}}]);